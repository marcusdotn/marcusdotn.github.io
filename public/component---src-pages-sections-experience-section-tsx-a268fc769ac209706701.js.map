{"version":3,"file":"component---src-pages-sections-experience-section-tsx-a268fc769ac209706701.js","mappings":"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","sources":["webpack://my-portfolio/./src/components/CodeSymbol.tsx","webpack://my-portfolio/./src/components/Section.tsx","webpack://my-portfolio/./src/components/ExperienceDropdown.module.css","webpack://my-portfolio/./src/components/ExperienceDropdown.tsx","webpack://my-portfolio/./src/pages/sections/ExperienceSection.module.css","webpack://my-portfolio/./src/pages/sections/ExperienceSection.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface CodeSymbolProps {\n    direction: \"left\" | \"right\"\n    scale?: number\n}\n\nexport default function CodeSymbol({direction, scale=100}: CodeSymbolProps) {\n    if (direction === \"left\") return (\n        <svg style={{scale: `${scale}%`}} width=\"72\" height=\"138\" viewBox=\"0 0 72 138\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M67 5L3 69L67 133\" stroke=\"white\" strokeOpacity=\"0.6\" strokeWidth=\"6\" strokeLinecap=\"square\" strokeLinejoin=\"round\"/>\n        </svg>\n    );\n    else if (direction === \"right\") return (\n        <svg style={{scale: `${scale}%`}} width=\"72\" height=\"138\" viewBox=\"0 0 72 138\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5 133L69 69L5 5\" stroke=\"white\" strokeOpacity=\"0.6\" strokeWidth=\"6\" strokeLinecap=\"square\" strokeLinejoin=\"round\"/>\n        </svg>\n    );\n}","import React, { ReactNode } from \"react\";\nimport CodeSymbol from \"./CodeSymbol\";\nimport { isMobile } from \"react-device-detect\";\n\ninterface SectionProps {\n    id: string\n    children?: React.ReactNode\n    header?: ReactNode | string\n    className?: string\n    style?: React.CSSProperties\n}\n\n\ninterface SectionHeaderProps {\n    className?: string\n    style?: React.CSSProperties\n    children?: React.ReactNode\n}\n\nexport function SectionHeader(props: SectionHeaderProps) {\n    return <div style={props.style} className={`flex flex-row w-fit h-fit items-center text-4xl font-black ${isMobile && \"text-center\"} ${props?.className}`}>\n        <CodeSymbol scale={70} direction=\"left\" />\n        {props?.children}\n        <CodeSymbol scale={70} direction=\"right\" />\n    </div>\n}\n\nexport default function Section(props: SectionProps) {\n    return <section {...props}>\n        {\n            props?.header && (\n                typeof props.header === \"string\"? <SectionHeader>{props.header}</SectionHeader> : props.header\n            )\n        }   \n\n        {props?.children}\n    </section>\n}","// extracted by mini-css-extract-plugin\nexport var button = \"ExperienceDropdown-module--button--9e1f2\";\nexport var button_alt = \"ExperienceDropdown-module--button_alt--48302\";\nexport var container = \"ExperienceDropdown-module--container--28291\";\nexport var content = \"ExperienceDropdown-module--content--5678d\";\nexport var content_alt = \"ExperienceDropdown-module--content_alt--e0945\";\nexport var datespan = \"ExperienceDropdown-module--datespan--28937\";\nexport var mobile_expanded_indicator = \"ExperienceDropdown-module--mobile_expanded_indicator--a7a33\";\nexport var mobile_title = \"ExperienceDropdown-module--mobile_title--65cbf\";\nexport var mobile_wrapper = \"ExperienceDropdown-module--mobile_wrapper--b8f80\";\nexport var skill = \"ExperienceDropdown-module--skill--07b0b\";\nexport var skill_alt = \"ExperienceDropdown-module--skill_alt--348c2\";\nexport var skills_container = \"ExperienceDropdown-module--skills_container--da8ab\";\nexport var status = \"ExperienceDropdown-module--status--e5132\";\nexport var title = \"ExperienceDropdown-module--title--3eca3\";","import React from \"react\";\nimport { useState } from \"react\";\nimport { Experience } from \"../config\";\nimport * as styles from \"./ExperienceDropdown.module.css\";\nimport { isAbsolute } from \"path\";\nimport { isMobile } from \"react-device-detect\";\n\n\ninterface ExperienceDropdownProps {\n    experience: Experience\n    defaultExpanded?: boolean\n    onToggle?: (isExpanded: boolean) => void\n}\n\n\nconst ExpandedIndicator = ({isExpanded}: {isExpanded: boolean}) => (\n    isExpanded ? (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M5 12H19\" stroke=\"#F1F1F1\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    )\n    : (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 5V19\" stroke=\"#F1F1F1\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        <path d=\"M5 12H19\" stroke=\"#F1F1F1\" stroke-width=\"3\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n    </svg>\n    )\n)\n\n\nexport default function ExperienceDropdown({experience, defaultExpanded=false, onToggle}: ExperienceDropdownProps) {\n    const [isExpanded, setIsExpanded] = useState(defaultExpanded);\n    const isAlt = experience.isAlt;\n\n    const doToggle = () => {\n        setIsExpanded(!isExpanded);\n        onToggle && onToggle(isExpanded);\n    }\n\n    return <div className={`${styles.container}`}>\n        <button \n        className={`${styles.button} ${isAlt ? styles.button_alt : \"\"}`} \n        onClick={doToggle}>\n            {isMobile ? (\n                <div className={styles.mobile_wrapper}>\n                    <div className={styles.mobile_title}>\n                        <span className={styles.title}>{experience.title}</span>\n                        <span className={styles.datespan}>{experience.start} - {experience.end}</span>\n                    </div>\n\n                    <span className={styles.mobile_expanded_indicator}>\n                        <ExpandedIndicator isExpanded={isExpanded} />\n                    </span>\n                </div>\n            ) : (\n                <>\n                    <p className={styles.title}>\n                        {experience.title}\n                    </p>\n                    <div className={styles.status}>\n                        <span>{experience.start} - {experience.end}</span>\n                        <ExpandedIndicator isExpanded={isExpanded} />\n                    </div>\n                </>\n            )}\n        </button>\n\n        <div \n        className={`${styles.content} ${isAlt ? styles.content_alt : \"\"} ${isExpanded ? \"h-fit p-4\" : \"h-0 p-0 visible\"}`}\n        >\n            <p className={styles.description}>{experience.description}</p>\n\n            <div className={styles.skills_container}>\n                {experience.skills.map((skill, id) => (\n                    <span key={id} className={`${styles.skill} ${isAlt ? styles.skill_alt : \"\"}`}>{skill}</span>\n                ))}\n            </div>\n        </div>\n    </div>\n}","// extracted by mini-css-extract-plugin\nexport var experience_container = \"ExperienceSection-module--experience_container--6b2b2\";","import React from \"react\";\nimport Section from \"../../components/Section\";\nimport config from \"../../config\";\nimport ExperienceDropdown from \"../../components/ExperienceDropdown\";\nimport * as styles from \"./ExperienceSection.module.css\";\n\n\nexport default function ExperienceSection() {\n    const experiences = config.EXPERIENCE;\n\n    return <Section \n    header=\"Professional experience\"\n    id=\"experience\"\n    className=\"h-fit flex flex-col items-center pb-80 pt-20\"\n    >\n    <div className={styles.experience_container}>\n        {\n        experiences.map((experience, id) => (\n            <ExperienceDropdown key={id} experience={experience} />\n        ))\n        }\n    </div>\n   </Section>\n}   "],"names":["CodeSymbol","direction","scale","React","style","width","height","viewBox","fill","xmlns","d","stroke","strokeOpacity","strokeWidth","strokeLinecap","strokeLinejoin","SectionHeader","props","className","isMobile","children","Section","header","button_alt","container","content","content_alt","datespan","mobile_expanded_indicator","mobile_title","mobile_wrapper","skill_alt","skills_container","title","ExpandedIndicator","_ref","isExpanded","ExperienceDropdown","experience","defaultExpanded","onToggle","setIsExpanded","useState","isAlt","styles","onClick","start","end","description","skills","map","skill","id","key","experience_container","ExperienceSection","experiences","config","EXPERIENCE"],"sourceRoot":""}