{"version":3,"file":"component---src-pages-sections-intro-section-tsx-6168f2dd02ad1953dcfa.js","mappings":"yKAUO,IAAMA,EAAM,8DAiBd,OAjBc,wBACfC,OAAA,WACI,MAAMC,EAAqB,CAAC,EAC5BC,OAAOC,OAAOF,EAAOG,KAAKH,OAC1BA,EAAMI,UAAa,GAAEJ,EAAMK,kBAAkBL,aAAK,EAALA,EAAOI,YAUpD,OAAOE,EAAAA,cAAAA,SAAAA,OAAAA,OAAAA,CAAAA,EAAYN,EAAK,CAAEO,QARwCC,IAC1DR,EAAMS,gBACNC,OAAOC,SAASC,KAAOZ,EAAMS,eAE7BT,EAAMO,SACNP,EAAMO,QAAQC,EAAE,IAInBL,KAAKH,MAAMa,SAEpB,EAAC,EAjBc,CAASP,EAAAA,U,4FCHb,SAASQ,EAAW,GAA0C,IAA1C,UAACC,EAAS,MAAEC,EAAM,KAAqB,EACtE,MAAkB,SAAdD,EACAT,EAAAA,cAAAA,MAAAA,CAAKW,MAAO,CAACD,MAAQ,GAAEA,MAAWE,MAAM,KAAKC,OAAO,MAAMC,QAAQ,aAAaC,KAAK,OAAOC,MAAM,8BAC7FhB,EAAAA,cAAAA,OAAAA,CAAMiB,EAAE,oBAAoBC,OAAO,QAAQC,cAAc,MAAMC,YAAY,IAAIC,cAAc,SAASC,eAAe,WAGtG,UAAdb,EACLT,EAAAA,cAAAA,MAAAA,CAAKW,MAAO,CAACD,MAAQ,GAAEA,MAAWE,MAAM,KAAKC,OAAO,MAAMC,QAAQ,aAAaC,KAAK,OAAOC,MAAM,8BAC7FhB,EAAAA,cAAAA,OAAAA,CAAMiB,EAAE,mBAAmBC,OAAO,QAAQC,cAAc,MAAMC,YAAY,IAAIC,cAAc,SAASC,eAAe,gBAFvH,CAKT,C,cCCO,SAASC,EAAc7B,GAC1B,OAAOM,EAAAA,cAAAA,MAAAA,CAAKW,MAAOjB,EAAMiB,MAAOb,UAAY,8DAA6D0B,EAAAA,IAAY,iBAAiB9B,aAAK,EAALA,EAAOI,aACzIE,EAAAA,cAACQ,EAAU,CAACE,MAAO,GAAID,UAAU,SAChCf,aAAK,EAALA,EAAOa,SACRP,EAAAA,cAACQ,EAAU,CAACE,MAAO,GAAID,UAAU,UAEzC,CAEe,SAASgB,EAAQ/B,GAC5B,OAAOM,EAAAA,cAAAA,UAAaN,GAEZA,aAAK,EAALA,EAAOgC,UACqB,iBAAjBhC,EAAMgC,OAAqB1B,EAAAA,cAACuB,EAAa,KAAE7B,EAAMgC,QAA0BhC,EAAMgC,QAI/FhC,aAAK,EAALA,EAAOa,SAEhB,C,sGChCe,SAASoB,IACpB,OAAO3B,EAAAA,cAACyB,EAAAA,EAAO,CACfG,GAAG,QACH9B,UAAU,yBACV4B,OAAQ1B,EAAAA,cAACuB,EAAAA,EAAa,CAACzB,UAAU,qDAAoD,OAAI,2BAAK,cAC9Fa,MAAO,CACHkB,WAAa,qEAGb7B,EAAAA,cAAAA,MAAAA,CAAKF,UAAU,kEAEXE,EAAAA,cAAAA,IAAAA,KAAG,mDAEHA,EAAAA,cAACR,EAAAA,EAAM,CAACM,UAAU,QAAQC,QAAQ,yBAAyBI,cAAc,UAAS,mBAG9F,C","sources":["webpack://my-portfolio/./src/components/Button.tsx","webpack://my-portfolio/./src/components/CodeSymbol.tsx","webpack://my-portfolio/./src/components/Section.tsx","webpack://my-portfolio/./src/pages/sections/IntroSection.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\n\n\ninterface ButtonProps extends React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n    btnType: \"transparentWhiteborder\" | \"filledPrimary\" | \"neutral\"\n    onClick?: React.MouseEventHandler<HTMLButtonElement>\n    gotoSectionId?: string\n    children?: ReactNode\n}\n\nexport class Button extends React.Component<ButtonProps> {\n    render(): React.ReactNode {\n        const props: ButtonProps = {} as ButtonProps;\n        Object.assign(props, this.props);\n        props.className = `${props.btnType} button ${props?.className}`;\n\n        const clickHandler: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n            if (props.gotoSectionId)\n                window.location.hash = props.gotoSectionId;\n    \n            if (props.onClick)\n                props.onClick(e);\n        };\n\n        return <button {...props} onClick={clickHandler}>\n            {this.props.children}\n        </button>\n    }\n}\n","import React from \"react\";\n\ninterface CodeSymbolProps {\n    direction: \"left\" | \"right\"\n    scale?: number\n}\n\nexport default function CodeSymbol({direction, scale=100}: CodeSymbolProps) {\n    if (direction === \"left\") return (\n        <svg style={{scale: `${scale}%`}} width=\"72\" height=\"138\" viewBox=\"0 0 72 138\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M67 5L3 69L67 133\" stroke=\"white\" strokeOpacity=\"0.6\" strokeWidth=\"6\" strokeLinecap=\"square\" strokeLinejoin=\"round\"/>\n        </svg>\n    );\n    else if (direction === \"right\") return (\n        <svg style={{scale: `${scale}%`}} width=\"72\" height=\"138\" viewBox=\"0 0 72 138\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M5 133L69 69L5 5\" stroke=\"white\" strokeOpacity=\"0.6\" strokeWidth=\"6\" strokeLinecap=\"square\" strokeLinejoin=\"round\"/>\n        </svg>\n    );\n}","import React, { ReactNode } from \"react\";\nimport CodeSymbol from \"./CodeSymbol\";\nimport { isMobile } from \"react-device-detect\";\n\ninterface SectionProps {\n    id: string\n    children?: React.ReactNode\n    header?: ReactNode | string\n    className?: string\n    style?: React.CSSProperties\n}\n\n\ninterface SectionHeaderProps {\n    className?: string\n    style?: React.CSSProperties\n    children?: React.ReactNode\n}\n\nexport function SectionHeader(props: SectionHeaderProps) {\n    return <div style={props.style} className={`flex flex-row w-fit h-fit items-center text-4xl font-black ${isMobile && \"text-center\"} ${props?.className}`}>\n        <CodeSymbol scale={70} direction=\"left\" />\n        {props?.children}\n        <CodeSymbol scale={70} direction=\"right\" />\n    </div>\n}\n\nexport default function Section(props: SectionProps) {\n    return <section {...props}>\n        {\n            props?.header && (\n                typeof props.header === \"string\"? <SectionHeader>{props.header}</SectionHeader> : props.header\n            )\n        }   \n\n        {props?.children}\n    </section>\n}","import React from \"react\";\nimport CodeSymbol from \"../../components/CodeSymbol\";\nimport {Button} from \"../../components/Button\";\nimport Section, { SectionHeader } from \"../../components/Section\";\n\nexport default function IntroSection() {\n    return <Section \n    id=\"intro\" \n    className=\"h-screen flex flex-col\"\n    header={<SectionHeader className=\"font-black text-4xl text-nowrap self-center mt-80\">Hi, <br/>I'm marcus</SectionHeader>}\n    style={{\n        background: `linear-gradient(180deg, #241F35 6%, var(--background-color) 80%)`\n    }}\n    >\n        <div className=\"flex flex-col gap-7 self-center mt-10 items-center text-center\">\n\n            <p>full-stack developer, app dev & game enthusiast</p>\n\n            <Button className=\"mt-16\" btnType=\"transparentWhiteborder\" gotoSectionId=\"skills\">GET TO KNOW ME</Button>\n        </div>\n    </Section> \n}"],"names":["Button","render","props","Object","assign","this","className","btnType","React","onClick","e","gotoSectionId","window","location","hash","children","CodeSymbol","direction","scale","style","width","height","viewBox","fill","xmlns","d","stroke","strokeOpacity","strokeWidth","strokeLinecap","strokeLinejoin","SectionHeader","isMobile","Section","header","IntroSection","id","background"],"sourceRoot":""}